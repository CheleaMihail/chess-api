"""Add Battles

Revision ID: 6f0375085c92
Revises: 33ae8f36f7ee
Create Date: 2025-02-23 14:24:26.385650

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '6f0375085c92'
down_revision: Union[str, None] = '33ae8f36f7ee'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_games_id', table_name='games')
    op.drop_table('games')
    op.drop_index('ix_battles_id', table_name='battles')
    op.drop_table('battles')
    op.drop_index('ix_users_email', table_name='users')
    op.drop_index('ix_users_id', table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('hashed_password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('stats_ultra', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('stats_bullet', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('stats_rapid', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('stats_blitz', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('stats_classic', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('username', name='users_username_key'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    op.create_index('ix_users_email', 'users', ['email'], unique=True)
    op.create_table('battles',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('battles_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('type', postgresql.ENUM('ultra', 'bullet', 'rapid', 'blitz', 'classic', name='battletype'), autoincrement=False, nullable=False),
    sa.Column('is_rating', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('games_count', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('player_time', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('player_increment', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('oponent_time', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('oponent_increment', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('color_attach_mode', postgresql.ENUM('white', 'black', 'random', name='colorattachmode'), autoincrement=False, nullable=False),
    sa.Column('with_armaghedon', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='battles_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_battles_id', 'battles', ['id'], unique=False)
    op.create_table('games',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('type', postgresql.ENUM('ultra', 'bullet', 'rapid', 'blitz', 'classic', name='battletype'), autoincrement=False, nullable=False),
    sa.Column('is_rating', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('moves', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('player_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('oponent_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('player_color', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('battle_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['battle_id'], ['battles.id'], name='games_battle_id_fkey'),
    sa.ForeignKeyConstraint(['oponent_id'], ['users.id'], name='games_oponent_id_fkey'),
    sa.ForeignKeyConstraint(['player_id'], ['users.id'], name='games_player_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='games_pkey')
    )
    op.create_index('ix_games_id', 'games', ['id'], unique=False)
    # ### end Alembic commands ###
